// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client" 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  CUSTOMER
  STAFF
  ADMIN
}

model User {
  id              Int        @id @default(autoincrement())
  email           String    @unique
  hashedPassword        String
  firstName       String?
  lastName        String?
  role            Role      @default(CUSTOMER)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  orders          Order[]
}

model Category {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  products        Product[]
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String
  description     String
  price           Decimal
  imageUrl        String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  categoryId      Int
  category        Category  @relation(fields: [categoryId], references: [id])
  orderItems      OrderItem[]
}

enum OrderStatus {
  PENDING
  PREPARING
  READY_FOR_PICKUP
  COMPLETED
  CANCELLED
}

model Order {
  id              Int           @id @default(autoincrement())
  total           Decimal 
  status          OrderStatus   @default(PENDING)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  userId          Int
  user            User          @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id              Int           @id @default(autoincrement())
  quantity        Int
  price           Decimal
  orderId         Int
  order           Order         @relation(fields: [orderId], references: [id])
  productId       Int
  product         Product       @relation(fields: [productId], references: [id])
}